// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// open_bgen
List open_bgen(SEXP bgenfile_in, SEXP getIndices_in);
RcppExport SEXP _bgenR_open_bgen(SEXP bgenfile_in, SEXP getIndices_in) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(open_bgen(bgenfile_in, getIndices_in));
    return rcpp_result_gen;
END_RCPP
}

// query_bgen
List query_bgen(SEXP bgenR_in, SEXP seek_in);
RcppExport SEXP _bgenR_query_bgen(SEXP bgenR_in, SEXP seek_in) {
    BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(query_bgen(bgenR_in, seek_in));
    return rcpp_result_gen;
    END_RCPP
}

// close_bgen
String close_bgen(SEXP bgenR_in);
RcppExport SEXP _bgenR_close_bgen(SEXP bgenR_in) {
    BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(close_bgen(bgenR_in));
    return rcpp_result_gen;
    END_RCPP
}



// variant_block
Rcpp::DataFrame variant_block(SEXP bgenR_in);
RcppExport SEXP _bgenR_variant_block(SEXP bgenR_in) {
    BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(variant_block(bgenR_in));
    return rcpp_result_gen;
    END_RCPP
}



static const R_CallMethodDef CallEntries[] = {
    {"_bgenR_open_bgen", (DL_FUNC) &_bgenR_open_bgen, 1},
    {"_bgenR_query_bgen", (DL_FUNC) &_bgenR_query_bgen, 0},
    {"_bgenR_close_bgen", (DL_FUNC) &_bgenR_close_bgen, 0},  
    {"_bgenR_variant_block", (DL_FUNC) &_bgenR_variant_block, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_test(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
